import java.awt.Graphics;
import java.awt.Image;

import javax.swing.ImageIcon;
import javax.swing.JPanel;

public class SetMaps extends JPanel {
	
	
	
	 
	
	static int[][] map_1= {
		{1,1,1,1,1,1,1,1,1,1,								1,1,1,1,1,1,1,1,1,1,						1,1,1,1,1,1,1,1,1,1},			            //1
		
		{1,14,10,10,10,10,10,10,10,10,						13,10,10,10,10,10,10,10,10,13,				10,10,10,10,10,10,10,10,10,10},			    //2
		 
		{1,11,1850,0,0,250,251,0,0,1851,					11,1852,0,0,0,0,0,0,0,11,					1853,0,0,0,100,101,0,0,0,1},			    //3  
		
		{1,11,252,253,0,254,255,0,256,257,					11,0,0,0,200,201,0,0,0,11,					0,0,0,0,102,103,0,0,0,1},			        //4
		
		{1,11,258,259,260,261,262,263,264,265,				11,202,203,204,205,206,207,208,209,11,		0,0,104,105,106,107,108,109,0,1},			//5
		
		{1,11,266,267,268,269,270,271,272,273,				11,210,211,212,213,214,215,216,217,11,		110,111,112,113,114,115,116,117,118,1},		//6
		
		{1,11,274,275,276,277,278,279,280,281,				11,218,219,220,221,222,223,224,225,11,		119,120,121,122,123,124,125,126,127,1},		//7
		
		{1,11,282,283,284,285,286,287,288,289,				11,226,227,228,229,230,231,232,233,11,		128,129,130,131,132,133,134,135,136,1},		//8
		
		{1,11,290,291,292,293,294,295,296,297,				11,234,235,236,237,238,239,240,241,11,		137,138,139,140,141,142,143,144,145,1},		//9
		
		{1,15,10,10,10,10,10,10,10,10,						17,10,10,10,10,10,10,10,10,16,				2,2,2,2,2,2,2,2,2,1},		             	//10
		
		
		
		
		{1,11,0,300,301,302,303,304,305,1854,				11,0,360,361,1855,0,400,401,0,11,			2,2,2,2,2,2,2,2,2,1},			            //11
		
		{1,11,306,307,308,309,310,311,312,0,				11,362,363,364,365,402,403,404,405,11,		1,1,1,1,1,1,1,1,1,1},			            //12
		
		{1,11,313,314,315,316,317,318,319,0,				11,366,367,368,369,406,407,408,409,11,		1856,0,0,0,150,151,152,0,0,1},			    //13
		
		{1,11,320,321,322,323,324,325,326,0,				11,370,371,372,373,410,411,412,413,11,		0,0,0,0,153,154,155,0,0,1},			        //14
		
		{1,11,327,328,329,330,331,332,333,1860,		    	11,2,2,2,2,2,2,2,2,11,						0,156,157,158,159,160,161,162,163,1},       //15
		
		{1,11,334,335,336,337,338,339,340,341,			    11,380,381,382,383,0,0,0,1858,11,			1857,164,165,166,167,168,169,170,171,1},    //16
		
		{1,11,342,343,344,345,346,347,348,349,			    11,384,385,386,387,0,0,0,0,11,				172,173,174,175,176,177,178,179,180,1},     //17
		
		{1,11,350,351,352,353,354,355,356,357,				11,388,389,390,391,0,0,0,1859,11,			181,182,183,184,185,186,187,188,189,1},     //18
		
		{18,12,10,10,10,10,10,10,10,10,		                12,10,10,10,10,10,10,10,10,12,		        10,10,10,10,10,10,10,10,10,18},             //19
		
		{1,1,1,1,1,1,1,1,1,1,						        1,1,1,1,1,1,1,1,1,1,						1,1,1,1,1,1,1,1,1,1}			            //20	
	};
	static int row_1 = 20;
	static int col_1 = 30;


	
	
	/*Weishuang.Zhang13*/
	static int[][] map_2= {
			{1,1200,1201,1202,1203,1204,1205,1206,1207,1,   		1,1,1,1,1,1,1,1,1,1,									18,1300,1301,1302,1303,1304,1305,1306,1307,1},			//1
			
			{1,1208,1209,1210,1211,1212,1213,1214,1215,1,        	1,1,1,1,1,1,1,1,1,1,									11,1308,1309,1310,1311,1312,1313,1314,1315,1},			//2
			
			{1,1216,1217,1218,1219,1220,1221,1222,1223,1, 			1,0,0,0,1250,1251,0,0,0,1,	 							11,1316,1317,1318,1319,1320,1321,1322,1323,1},			//3  
			
			{1862,1224,1225,1226,1227,1228,1229,1230,1231,1,	 	1,1861,0,0,1252,1253,1863,0,0,1,						11,1324,1325,1326,1327,1328,1329,1330,1331,1},			//4
			
			{14,10,10,10,10,10,10,10,10,13,			   				10,10,10,10,10,10,10,10,10,10,				     		17,10,10,10,10,10,10,10,10,18},			                //5
			
			{11,1350,1351,1352,1353,1354,1355,1356,1357,11,   	    1400,1401,1402,1403,1404,0,0,0,0,1864,    				11,1450,1451,1452,1453,1454,1455,1456,1457,1},			//6
			
			{11,1358,1359,1360,1361,1362,1363,1364,1365,11,   	    1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,		11,1458,1459,1460,1461,1462,1463,1464,1465,1},			//7
			
			{11,1366,1367,1368,1369,1370,1371,1372,1373,11,     	1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,		11,1466,1467,1468,1469,1470,1471,1472,1473,1},			//8
			
			{11,1374,1375,1376,1377,1378,1379,1380,1381,11,     	1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,		11,1474,1475,1476,1477,1478,1479,1480,1481,1},			//9
			
			{15,10,10,10,10,10,10,10,10,17,			      			10,10,10,10,10,10,10,10,10,10,							17,10,10,10,10,10,10,10,10,10},			                //10
			
			
			
			
			{11,1500,1501,1502,1503,1504,1505,1506,1507,11,     	1550,1551,1867,0,1583,1552,1553,1554,1555,0,			11,1600,1601,1603,1603,1604,1605,1606,1607,1},			//11
			
			{11,1508,1509,1510,1511,1512,1513,1514,1515,11,     	1556,1557,1558,1559,1560,1561,1562,1563,1564,0,			11,1608,1609,1610,1611,1612,1613,1614,1615,1},			//12
			
			{11,1516,1517,1518,1519,1520,1521,1522,1523,11,     	1565,1566,1567,1568,1569,1570,1571,1572,1573,0,			11,1616,1617,1618,1619,1620,1621,1622,1623,1},			//13
			
			{11,1524,1525,1526,1527,1528,1529,1530,1531,11,     	1574,1575,1576,1577,1578,1579,1580,1581,1582,1866,		11,1624,1625,1626,1627,1628,1629,1630,1631,1},			//14
			
			{15,10,10,10,10,10,10,10,10,17,   						10,10,10,10,10,10,10,10,10,10,					        17,10,10,10,10,10,10,10,10,10},                         //15
			
			{11,1700,1701,1702,0,1750,1751,1751,1753,11,   			1865,0,0,0,0,0,0,0,0,1870,			                11,1800,1801,1803,1803,1804,1805,1806,1807,1},          //16  
			 
			{11, 1703,1704,1705,0,1754,1755,1756,1757,11,   		1650,1651,1652,1653,1654,1655,1656,1657,1658,0,			11,1808,1809,1810,1811,1812,1813,1814,1815,1},          //17
			
			{11,1706,1707,1708,0,1758,1759,1760,1761,11,   			1659,1660,1661,1662,1663,1664,1665,1666,1667,0,			11,1816,1817,1818,1819,1820,1821,1822,1823,1},          //18
			 
			{11,1709,1710,1711,1869,1762,1763,1764,1765,11,   		1668,1669,1670,1671,1672,1673,1674,1675,1676,0,      		11,1824,1825,1826,1827,1828,1829,1830,1831,1},          //19
			
			{21,10,10,10,10,10,10,10,10,12,              			10,10,10,10,10,10,10,10,10,10,					        12,10,10,10,10,10,10,10,10,10}			                //20	
	};
	static int row_2 = 20;
	static int col_2 = 30;
	
	/*Weishuang.Zhang*/
	
	 //Wang Baichuan
	static int[][] map_3= {
			

					
					{1,1,1,1,1,1,1,1,1,1,						       1,1,1,1,1,1,1,1,1,1,							            18,1,1,1,1,1,1,1,1,1}	,			//1
					
					{1,14,0,0,0,0,0,0,0,0,		                       0,2530,2531,2532,2533,2534,0,0,0,1868,	                    11,0,0,0,2300,2301,2302,2303,0,1},			//2
					
					{1,11,2600,2601,2602,2603,2604,2605,2606,0,		   0,2535,2536,2537,2538,2539,0,0,0,0,						11,0,0,2305,2306,2307,2308,2309,0,1},			//3  
					
					{1,11,2607,2608,2609,2610,2611,2612,2613,0,	       0,2540,2541,2542,2543,2544,0,0,0,0,						11,0,2310,2311,2312,2313,2314,2315,2316,1},			//4
					
					{1,11,2614,2615,2616,2617,2618,2619,2620,1871,		   1,2545,2546,2547,2548,2549,1,1,1,1872,						11,2317,2318,2319,2320,2321,2322,2323,2324,1},			//5
					
					{1,15,10,10,10,10,10,10,10,10,			           10,10,10,10,10,10,10,10,10,10,						    16,2325,2326,2327,2328,2329,2330,2331,2332,1},			//6
					
					{1,11,0,2570,2571,2572,0,0,2636,0,			       0,2500,2501,2502,2503,2504,2637,2638,2639,2640,			11,2333,2334,2335,2336,2337,2338,2339,2340,1},			//7		
					
					{1,11,0,2573,2574,2575,2621,2622,2623,2624,		   2625,2505,2506,2507,2508,2509,2641,2642,2643,2644,		11,2341,2342,2343,2344,2345,2346,2347,2348,1},			//8
					
					{1,11,2576,2577,2578,2579,2626,2627,2628,2629,	   2630,2510,2511,2512,2513,2514,2645,2646,2647,2648,		11,2349,2350,2351,2352,2353,2354,2355,2356,1},			//9
					
					{1,11,2580,2581,2582,2583,2631,2632,2633,2634,	   2635,2515,2516,2517,2518,2519,2649,2650,2651,2652,		11,2357,2358,2359,2360,2361,2362,2363,2364,1},			//10			
					
					{1,15,10,10,10,10,10,10,10,10,			           10,10,10,10,10,10,10,10,10,10,					        17,10,10,10,10,10,10,10,10,1},			//11
					
					{1,11,0,0,0,0,0,0,0,1873,		                       0,0,0,2800,2801,0,2820,2821,2822,2823,		                    11,2,2,2,2,2,2,2,2,1	},			//+22
					
					{1,11,2700,2701,2702,2703,2704,2705,2706,0,		   2802,2803,2804,2805,2806,0,2824,2825,2826,2827,		    11,2,2,2,2,2,2,2,2,1},			//12
					
					{1,11,2707,2708,2709,2710,2711,2712,2713,0,		   2807,2808,2809,2810,2811,0,2828,2829,2830,2831,		    11,2,2,2,2,2,2,2,2,1},			//13
					
					{1,11,2714,2715,2716,2717,2718,2719,2720,1,		   2812,2813,2814,2815,2816,0,2832,2833,2834,2835,		    11,2,2,2,2,2,2,2,2,1},   //14
					
					{1,15,10,10,10,10,10,10,10,10,		               10,10,10,10,10,10,10,10,10,10,					        16,2,2,2,2,2,2,2,2,1},   //15
				  
					{1,11,2150,2151,2152, 0,0,0,0,1874,				   0,0,0,0,0,0,0,0,0,1875,				                        11,2,2,2,2,2,2,2,2,1},			//16
					
					{1,11,2153,2154,2155,0,0,0,0,0,					   0,0,0,0,0, 0,2170,2171,2172,2173,					   11,2,2,2,2,2,2,2,2,1},   //17
					
					{1,11,2156,2157,2158,2920,2921,2922,2923,2924,	   0,2900,2901,2902,0, 0,2174,2175,2176,2177,			   11,2,2,2,2,2,2,2,2,1},   //18
						
					{1,11,2159,2160,2161,2925,2926,2927,2928,2929,	   2903,2904,2905,2906,2907,0,2178,2179,2180,2181,		   11,2,2,2,2,2,2,2,2,1},  //19
					
					{1,11,2162,2163,2164,2930,2931,2932,2933,2934,	   2908,2909,2910,2911,2912,0,2182,2183,2184,2185,		   11,2,2,2,2,2,2,2,2,2},  //20
					
					{1,18,10,10,10,10,10,10,10,10,	                   11,10,10,10,10,10,10,10,10,10,					       12,1,1,1,1,1,1,1,1,1},  //21
				
				
					
				};
		static int row_3 = 22;
		static int col_3 = 30;
	//Wang Baichuan
	
	
	


	

	
	public void drawMap(Graphics g, int mapOrigin[], int[][] map_code) {
		LoadImage li = new LoadImage();
		li.loadImage();
		int judge;
		for (int i=0; i < Panel.ROW; i++) {
			for (int j=0; j < Panel.COL; j++) {
				g.drawImage(li.grass, j * Panel.CS, i * Panel.CS, this);
				judge=map_code[i+ mapOrigin[1]][j+ mapOrigin[0]];
				
				if(judge==1){
					g.drawImage(li.tree, j * Panel.CS, i * Panel.CS, this);
					
					
				}else if(judge==2){
					g.drawImage(li.floor, j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=10 && judge<=25){
					g.drawImage(li.road[judge-10], j * Panel.CS, i * Panel.CS, this);
					
				}
				
				/*Weishuang.Zhang*/
				else if(judge>=1200 && judge<1250){
					g.drawImage(li.dormitory6[judge-1200], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1250 && judge<1300){
					g.drawImage(li.ATM[judge-1250], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1300 && judge<1350){
					g.drawImage(li.dormitory4[judge-1300], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1350 && judge<1400){
					g.drawImage(li.dormitory5[judge-1350], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1400 && judge<1450){
					g.drawImage(li.park[judge-1400], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1450 && judge<1500){
					g.drawImage(li.dormitory3[judge-1450], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1500 && judge<1550){
					g.drawImage(li.serviceCenter[judge-1500], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1550 && judge<1600){
					g.drawImage(li.clinic[judge-1550], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1600 && judge<1650){
					g.drawImage(li.dormitory2[judge-1600], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1650 && judge<1700){
					g.drawImage(li.laundry[judge-1650], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1700 && judge<1750){
					g.drawImage(li.bookstore[judge-1700], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1750 && judge<1800){
					g.drawImage(li.police[judge-1750], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1800 && judge<1850){
					g.drawImage(li.dormitory1[judge-1800], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=1850 && judge<1900){
					g.drawImage(li.npc[judge-1850], j * Panel.CS, i * Panel.CS, this);
				}
               /*Weishuang.Zhang*/
				
				/*Zixian.Wang*/
				else if(judge>=100 && judge<150){
					g.drawImage(li.CB[judge-100], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=150 && judge<200){
					g.drawImage(li.FB[judge-150], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=200 && judge<250){
					g.drawImage(li.SB[judge-200],j * Panel.CS, i * Panel.CS, this);
				
				}else if(judge>=250 && judge<300){
					g.drawImage(li.IBSS[judge-250],j * Panel.CS, i * Panel.CS, this);
				}
				
				else if(judge>=300 && judge<360){
					g.drawImage(li.hotel[judge-300],j * Panel.CS, i * Panel.CS, this);
				}
				
				else if(judge>=360 && judge<380){
					g.drawImage(li.company1[judge-360],j * Panel.CS, i * Panel.CS, this);
				}
				
				else if(judge>=380 && judge<400){
					g.drawImage(li.company2[judge-380],j * Panel.CS, i * Panel.CS, this);
				}
				
				else if(judge>=400 && judge<420){
					g.drawImage(li.company3[judge-400],j * Panel.CS, i * Panel.CS, this);

				/*Zixian.Wang*/
				
				//Wang Baichuan
				}else if(judge>=2600 && judge<2699){
					g.drawImage(li.restaurant[judge-2600], j * Panel.CS, i * Panel.CS, this);
				
				}else if(judge>=2530 && judge<2560){
					g.drawImage(li.bakery[judge-2530], j * Panel.CS, i * Panel.CS, this);
					
					
				}else if(judge>=2570 && judge<2590){
					g.drawImage(li.haircut[judge-2570], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2500 && judge<2520){
					g.drawImage(li.fruit[judge-2500], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2700 && judge<2720){
					g.drawImage(li.cafe[judge-2700], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2150 && judge<2169){
					g.drawImage(li.cloth[judge-2150], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2820 && judge<2840){
					g.drawImage(li.hamburger[judge-2820], j * Panel.CS, i * Panel.CS, this);
						
				}else if(judge>=2800 && judge<2820){
					g.drawImage(li.familymart[judge-2800], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2900 && judge<2919){
					g.drawImage(li.electronic[judge-2900], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2920 && judge<2940){
					g.drawImage(li.cybercafe[judge-2920], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2300 && judge<2370){
					g.drawImage(li.WXB[judge-2300], j * Panel.CS, i * Panel.CS, this);
					
				}else if(judge>=2170 && judge<2290){
					g.drawImage(li.accessories[judge-2170], j * Panel.CS, i * Panel.CS, this);
			
			//Wang Baichuan
			}
		}
	}
}
}

